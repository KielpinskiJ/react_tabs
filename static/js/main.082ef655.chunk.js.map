{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","handleClick","className","map","title","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAA4B,SAAC,GAEpC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEjEO,EAAc,SAACF,GAAD,OAAc,WAC5BA,EAAIC,KAAOL,GACbC,EAAcG,KAIlB,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAJ,GACR,IAAQC,EAAcD,EAAdC,GAAII,EAAUL,EAAVK,MAEZ,OACE,oBACE,UAAQ,MAERF,UAAWF,IAAOH,EAAYG,GAAK,YAAc,GAHnD,SAKE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAASL,EAAYF,GAHvB,SAKGK,KAREJ,UAgBf,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGL,EAAYU,cCvCRb,EAAc,CACzB,CAAEM,GAAI,QAASI,MAAO,QAASG,QAAS,eACxC,CAAEP,GAAI,QAASI,MAAO,QAASG,QAAS,eACxC,CAAEP,GAAI,QAASI,MAAO,QAASG,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBe,EAAtB,KAMA,OACE,sBAAKR,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGR,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAH/B,aAGG,EAA4CS,SAG/C,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACG,GACrBW,EAAiBX,EAAIC,WCdzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.082ef655.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ninterface TabsProps {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<TabsProps> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleClick = (tab: Tab) => () => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={id}\n                className={id === selectedTab.id ? 'is-active' : ''}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={handleClick(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => tab.id === selectedTabId)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}